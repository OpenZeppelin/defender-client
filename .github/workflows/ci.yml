name: ci

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened, labeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  checks: write
  pull-requests: read
  contents: write
  actions: read
  id-token: write

jobs:
  prepare:
    name: Prepare pre-requisites
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2

    - name: Prepare pre-requisites
      uses: ./.github/actions/prepare

  # Deterministic Build & tests
  provenance:
    needs: prepare
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v1.6.0
    with:
      run-scripts: "install-deps, build-test"
      node-version: "16.20.0"

  publish:
    name: Publish
    needs: provenance
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      actions: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3.5.2
        # with:
        #   ref: refs/tags/${{ needs.tag.outputs.next_stable_version }}

      - name: Use node@16
        uses: actions/setup-node@v3
        with:
          node-version: 16.20.0

      - name: Create temp dir
        id: temp-dir
        run: |
          set -euo pipefail

          temp_dir=$(mktemp -d)
          echo "path=${temp_dir}" >>"${GITHUB_OUTPUT}"

      - name: Download tarball
        uses: slsa-framework/slsa-github-generator/.github/actions/secure-download-artifact@main
        with:
          name: ${{ needs.provenance.outputs.package-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}/${{ needs.provenance.outputs.package-name }}"
          sha256: ${{ needs.provenance.outputs.package-download-sha256 }}

      - name: Download provenance
        uses: slsa-framework/slsa-github-generator/actions/nodejs/secure-attestations-download@v1.6.0
        with:
          name: ${{ needs.provenance.outputs.provenance-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}"
          sha256: ${{ needs.provenance.outputs.provenance-download-sha256 }}

      - name: Verify downloaded artifacts
        run: |
          set -euo pipefail

          cd ${{ steps.temp-dir.outputs.path }}/${{ needs.provenance.outputs.package-name }}
          ls -al
          cd packages/
