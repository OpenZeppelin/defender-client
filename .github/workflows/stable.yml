name: publish-stable

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  tag:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      next_stable_version: ${{ steps.update_version.outputs.next_stable_version }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          egress-policy: audit

      - name: Checkout Repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          ref: master

      - name: Use node@16
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: 16.20.0

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@72b6676b71ab476b77e676928516f6982eef7a41 # v5.3.0
        with:
          gpg_private_key: ${{ secrets.SVC_GPG_KEY }}
          passphrase: ${{ secrets.SVC_GPG_PASSPHRASE }}
          git_config_global: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Update RC candidate version for deploy client
        run: |
          yarn versionup-deploy:stableminor

      - name: Update RC candidate version ( excluding deploy client )
        id: update_version
        run: |
          yarn versionup:stableminor
          TAG_NAME=$(node -p "require('./lerna.json').version")
          git add .
          git commit -m "Update version to $TAG_NAME" --no-verify
          echo "next_stable_version=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Tag Check
        id: tag_check
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Create Tag
        if: steps.tag_check.outputs.tag_exists == 'false'
        run: |
          git tag -a ${{ steps.update_version.outputs.next_stable_version }} -m "Release ${{ steps.update_version.outputs.next_stable_version }}"
          git push origin ${{ steps.update_version.outputs.next_stable_version }} --no-verify
          git push origin master --no-verify

  create-release:
    name: Create Release
    needs: tag
    uses: ./.github/workflows/release.yml
    with:
      tag: ${{ needs.tag.outputs.next_stable_version }}
      prerelease: false

  provenance:
    permissions:
      contents: read
      id-token: write
      actions: read

    # Deterministic Build & tests
    needs: [tag, create-release]
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v1.6.0
    with:
      run-scripts: "install-deps, nx-build-test-skip-cache"
      node-version: "16.20.0"

  publish:
    name: Publish
    needs: provenance
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          egress-policy: audit

      - name: Checkout Repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          ref: refs/tags/${{ needs.tag.outputs.next_stable_version }}

      - name: Use node@16
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: 16.20.0

      - name: Create temp dir
        id: temp-dir
        run: |
          set -euo pipefail

          temp_dir=$(mktemp -d)
          echo "path=${temp_dir}" >>"${GITHUB_OUTPUT}"

      - name: Download tarball
        uses: slsa-framework/slsa-github-generator/.github/actions/secure-download-artifact@934435652996c02a6317092984312602dfaf2a21 # main
        with:
          name: ${{ needs.provenance.outputs.package-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}/${{ needs.provenance.outputs.package-name }}"
          sha256: ${{ needs.provenance.outputs.package-download-sha256 }}

      - name: Download provenance
        uses: slsa-framework/slsa-github-generator/actions/nodejs/secure-attestations-download@0779f7bec68e2bf54a7b0a32bf4763f25ab29702 # v1.6.0
        with:
          name: ${{ needs.provenance.outputs.provenance-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}"
          sha256: ${{ needs.provenance.outputs.provenance-download-sha256 }}

      - name: Authenticate NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Unpack the zipped artifact
        run: |
          set -euo pipefail

          cd "${{ steps.temp-dir.outputs.path }}"
          tar -xzvf "${{ needs.provenance.outputs.package-name }}"
          cd package/; yarn publish
        env:
          NPM_CONFIG_PROVENANCE: true
