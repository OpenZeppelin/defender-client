name: publish-stable

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        description: Branch to trigger publish
        type: string
        default: master

jobs:
  tag:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      next_stable_version: ${{ steps.update_version.outputs.next_stable_version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3.5.2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Use node@16
        uses: actions/setup-node@v3
        with:
          node-version: 16.20.0

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.SVC_GPG_KEY }}
          passphrase: ${{ secrets.SVC_GPG_PASSPHRASE }}
          git_config_global: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Update RC candidate version for deploy client
        run: |
          yarn versionup-deploy:stableminor

      - name: Update RC candidate version ( excluding deploy client )
        id: update_version
        run: |
          yarn versionup:stableminor
          TAG_NAME=$(node -p "require('./lerna.json').version")
          git add .
          git commit -m "Update version to $TAG_NAME" --no-verify
          echo "next_stable_version=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Tag Check
        id: tag_check
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Create Tag
        if: steps.tag_check.outputs.tag_exists == 'false'
        run: |
          git tag -a ${{ steps.update_version.outputs.next_stable_version }} -m "Release ${{ steps.update_version.outputs.next_stable_version }}"
          git push origin ${{ steps.update_version.outputs.next_stable_version }} --no-verify
          git push origin master --no-verify

  create-release:
    name: Create Release
    needs: tag
    uses: ./.github/workflows/release.yml
    with:
      tag: ${{ needs.tag.outputs.next_stable_version }}
      prerelease: false

  publish:
    name: Publish
    needs: [tag, create-release]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3.5.2
         with:
          ref: refs/tags/${{ needs.tag.outputs.next_stable_version }}

      - name: Use node@16
        uses: actions/setup-node@v3
        with:
          node-version: 16.20.0

      - name: Authenticate NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish
        run: |
          yarn publish:stable
